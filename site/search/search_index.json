{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"API Overview Modules environments payments utils Classes environments.Environment : Enum class to define the different environments payments.Payments : A class representing a payment system. Functions utils.snake_to_camel : Convert snake_case to camelCase. This file was automatically generated via lazydocs .","title":"Overview"},{"location":"#api-overview","text":"","title":"API Overview"},{"location":"#modules","text":"environments payments utils","title":"Modules"},{"location":"#classes","text":"environments.Environment : Enum class to define the different environments payments.Payments : A class representing a payment system.","title":"Classes"},{"location":"#functions","text":"utils.snake_to_camel : Convert snake_case to camelCase. This file was automatically generated via lazydocs .","title":"Functions"},{"location":"environments/","text":"module environments class Environment Enum class to define the different environments Attributes: local : Local environment appStaging : Staging environment appTesting : Testing environment appArbitrum : Arbitrum environment appGnosis : Gnosis environment appMatic : Matic environment This file was automatically generated via lazydocs .","title":"Environments"},{"location":"environments/#module-environments","text":"","title":"module environments"},{"location":"environments/#class-environment","text":"Enum class to define the different environments Attributes: local : Local environment appStaging : Staging environment appTesting : Testing environment appArbitrum : Arbitrum environment appGnosis : Gnosis environment appMatic : Matic environment This file was automatically generated via lazydocs .","title":"class Environment"},{"location":"payments/","text":"module payments class Payments A class representing a payment system. Attributes: session_key (str): The session key for authentication. environment (Environment): The environment for the payment system. marketplace_auth_token (str, optional): The marketplace authentication token. app_id (str, optional): The application ID. version (str, optional): The version of the payment system. Methods: - create_ubscription : Creates a new subscription. - create_service : Creates a new service. - create_file : Creates a new file. - get_asset_ddo : Gets the asset DDO. - get_subscription_balance : Gets the subscription balance. - get_service_token : Gets the service token. - get_subscription_associated_services : Gets the subscription associated services. - get_subscription_associated_files : Gets the subscription associated files. - get_subscription_details : Gets the subscription details. - get_service_details : Gets the service details. - get_file_details : Gets the file details. - get_checkout_subscription : Gets the checkout subscription. method __init__ __init__( session_key: str, environment: Environment, marketplace_auth_token: Optional[str] = None, app_id: Optional[str] = None, version: Optional[str] = None ) method create_file create_file( subscription_did: str, asset_type: str, name: str, description: str, files: List[dict], price: int, token_address: str, data_schema: Optional[str] = None, sample_code: Optional[str] = None, files_format: Optional[str] = None, usage_example: Optional[str] = None, programming_language: Optional[str] = None, framework: Optional[str] = None, task: Optional[str] = None, training_details: Optional[str] = None, variations: Optional[str] = None, fine_tunable: Optional[bool] = None, amount_of_credits: Optional[int] = None, min_credits_to_charge: Optional[int] = None, max_credits_to_charge: Optional[int] = None, curation: Optional[dict] = None, duration: Optional[int] = None, tags: Optional[List[str]] = None ) Creates a new file. Args: subscription_did (str): The DID of the subscription. asset_type (str): The type of the asset. -> 'algorithm' | 'model' | 'dataset' | 'file' name (str): The name of the file. description (str): The description of the file. files (List[dict]): The files of the file. price (int): The price of the file. token_address (str): The token address. data_schema (str, optional): The data schema of the file. sample_code (str, optional): The sample code of the file. files_format (str, optional): The files format of the file. usage_example (str, optional): The usage example of the file. programming_language (str, optional): The programming language of the file. framework (str, optional): The framework of the file. task (str, optional): The task of the file. training_details (str, optional): The training details of the file. variations (str, optional): The variations of the file. fine_tunable (bool, optional): The fine tunable of the file. amount_of_credits (int, optional): The amount of credits for the file. min_credits_to_charge (int, optional): The minimum credits to charge for the file. max_credits_to_charge (int, optional): The maximum credits to charge for the file. curation (dict, optional): The curation information of the file. duration (int, optional): The duration of the file. tags (List[str], optional): The tags associated with the file. Returns: Response : The response from the API call. method create_service create_service( subscription_did: str, name: str, description: str, price: int, token_address: str, service_charge_type: str, auth_type: str, amount_of_credits: Optional[int] = None, min_credits_to_charge: Optional[int] = None, max_credits_to_charge: Optional[int] = None, username: Optional[str] = None, password: Optional[str] = None, token: Optional[str] = None, endpoints: Optional[List[dict]] = None, open_endpoints: Optional[List[str]] = None, open_api_url: Optional[str] = None, integration: Optional[str] = None, sample_link: Optional[str] = None, api_description: Optional[str] = None, curation: Optional[dict] = None, duration: Optional[int] = None, tags: Optional[List[str]] = None ) Creates a new service. Args: subscription_did (str): The DID of the subscription. name (str): The name of the service. description (str): The description of the service. price (int): The price of the service. token_address (str): The token address. service_charge_type (str): The charge type of the service. -> 'fixed' | 'dynamic' auth_type (str): The authentication type of the service. -> 'none' | 'basic' | 'oauth' amount_of_credits (int, optional): The amount of credits for the service. min_credits_to_charge (int, optional): The minimum credits to charge for the service. max_credits_to_charge (int, optional): The maximum credits to charge for the service. username (str, optional): The username for authentication. password (str, optional): The password for authentication. token (str, optional): The token for authentication. endpoints (List[dict], optional): The endpoints of the service. open_endpoints (List[str], optional): The open endpoints of the service. -> [{\"post\": \"https://api.example.app/api/v1/example\"}] open_api_url (str, optional): The OpenAPI URL of the service. integration (str, optional): The integration type of the service. sample_link (str, optional): The sample link of the service. api_description (str, optional): The API description of the service. curation (dict, optional): The curation information of the service. duration (int, optional): The duration of the service. tags (List[str], optional): The tags associated with the service. Returns: Response : The response from the API call. method create_subscription create_subscription( name: str, description: str, price: int, token_address: str, amount_of_credits: Optional[int], duration: Optional[int], tags: Optional[List[str]] ) Creates a new subscription. Args: name (str): The name of the subscription. description (str): The description of the subscription. price (int): The price of the subscription. token_address (str): The token address. amount_of_credits (int, optional): The amount of credits for the subscription. duration (int, optional): The duration of the subscription. tags (List[str], optional): The tags associated with the subscription. Returns: Response : The response from the API call. method get_asset_ddo get_asset_ddo(did: str) Gets the asset DDO. Args: did (str): The DID of the asset. Returns: Response : The response from the API call. method get_checkout_subscription get_checkout_subscription(subscription_did: str) Gets the checkout subscription. Args: subscription_did (str): The DID of the subscription. Returns: Response : The url of the checkout subscription. method get_file_details get_file_details(file_did: str) Gets the file details. Args: file_did (str): The DID of the file. Returns: Response : The url of the file details. method get_service_details get_service_details(service_did: str) Gets the service details. Args: service_did (str): The DID of the service. Returns: Response : The url of the service details. method get_service_token get_service_token(service_did: str) Gets the service token. Args: service_did (str): The DID of the service. Returns: Response : The response from the API call. method get_subscription_associated_files get_subscription_associated_files(subscription_did: str) Gets the subscription associated files. Args: subscription_did (str): The DID of the subscription. Returns: Response : List of DIDs of the associated files. method get_subscription_associated_services get_subscription_associated_services(subscription_did: str) Gets the subscription associated services. Args: subscription_did (str): The DID of the subscription. Returns: Response : List of DIDs of the associated services. method get_subscription_balance get_subscription_balance( subscription_did: str, account_address: Optional[str] = None ) Gets the subscription balance. Args: subscription_did (str): The DID of the subscription. account_address : Optional[str]: The account address. Returns: Response : The response from the API call. method get_subscription_details get_subscription_details(subscription_did: str) Gets the subscription details. Args: subscription_did (str): The DID of the subscription. Returns: Response : The url of the subscription details. method order_subscription order_subscription(subscription_did: str, agreementId: Optional[str] = None) Orders the subscription. Args: subscription_did (str): The DID of the subscription. agreementId (str, optional): The agreement ID. Returns: Response : The response from the API call. This file was automatically generated via lazydocs .","title":"Payments"},{"location":"payments/#module-payments","text":"","title":"module payments"},{"location":"payments/#class-payments","text":"A class representing a payment system. Attributes: session_key (str): The session key for authentication. environment (Environment): The environment for the payment system. marketplace_auth_token (str, optional): The marketplace authentication token. app_id (str, optional): The application ID. version (str, optional): The version of the payment system. Methods: - create_ubscription : Creates a new subscription. - create_service : Creates a new service. - create_file : Creates a new file. - get_asset_ddo : Gets the asset DDO. - get_subscription_balance : Gets the subscription balance. - get_service_token : Gets the service token. - get_subscription_associated_services : Gets the subscription associated services. - get_subscription_associated_files : Gets the subscription associated files. - get_subscription_details : Gets the subscription details. - get_service_details : Gets the service details. - get_file_details : Gets the file details. - get_checkout_subscription : Gets the checkout subscription.","title":"class Payments"},{"location":"payments/#method-__init__","text":"__init__( session_key: str, environment: Environment, marketplace_auth_token: Optional[str] = None, app_id: Optional[str] = None, version: Optional[str] = None )","title":"method __init__"},{"location":"payments/#method-create_file","text":"create_file( subscription_did: str, asset_type: str, name: str, description: str, files: List[dict], price: int, token_address: str, data_schema: Optional[str] = None, sample_code: Optional[str] = None, files_format: Optional[str] = None, usage_example: Optional[str] = None, programming_language: Optional[str] = None, framework: Optional[str] = None, task: Optional[str] = None, training_details: Optional[str] = None, variations: Optional[str] = None, fine_tunable: Optional[bool] = None, amount_of_credits: Optional[int] = None, min_credits_to_charge: Optional[int] = None, max_credits_to_charge: Optional[int] = None, curation: Optional[dict] = None, duration: Optional[int] = None, tags: Optional[List[str]] = None ) Creates a new file. Args: subscription_did (str): The DID of the subscription. asset_type (str): The type of the asset. -> 'algorithm' | 'model' | 'dataset' | 'file' name (str): The name of the file. description (str): The description of the file. files (List[dict]): The files of the file. price (int): The price of the file. token_address (str): The token address. data_schema (str, optional): The data schema of the file. sample_code (str, optional): The sample code of the file. files_format (str, optional): The files format of the file. usage_example (str, optional): The usage example of the file. programming_language (str, optional): The programming language of the file. framework (str, optional): The framework of the file. task (str, optional): The task of the file. training_details (str, optional): The training details of the file. variations (str, optional): The variations of the file. fine_tunable (bool, optional): The fine tunable of the file. amount_of_credits (int, optional): The amount of credits for the file. min_credits_to_charge (int, optional): The minimum credits to charge for the file. max_credits_to_charge (int, optional): The maximum credits to charge for the file. curation (dict, optional): The curation information of the file. duration (int, optional): The duration of the file. tags (List[str], optional): The tags associated with the file. Returns: Response : The response from the API call.","title":"method create_file"},{"location":"payments/#method-create_service","text":"create_service( subscription_did: str, name: str, description: str, price: int, token_address: str, service_charge_type: str, auth_type: str, amount_of_credits: Optional[int] = None, min_credits_to_charge: Optional[int] = None, max_credits_to_charge: Optional[int] = None, username: Optional[str] = None, password: Optional[str] = None, token: Optional[str] = None, endpoints: Optional[List[dict]] = None, open_endpoints: Optional[List[str]] = None, open_api_url: Optional[str] = None, integration: Optional[str] = None, sample_link: Optional[str] = None, api_description: Optional[str] = None, curation: Optional[dict] = None, duration: Optional[int] = None, tags: Optional[List[str]] = None ) Creates a new service. Args: subscription_did (str): The DID of the subscription. name (str): The name of the service. description (str): The description of the service. price (int): The price of the service. token_address (str): The token address. service_charge_type (str): The charge type of the service. -> 'fixed' | 'dynamic' auth_type (str): The authentication type of the service. -> 'none' | 'basic' | 'oauth' amount_of_credits (int, optional): The amount of credits for the service. min_credits_to_charge (int, optional): The minimum credits to charge for the service. max_credits_to_charge (int, optional): The maximum credits to charge for the service. username (str, optional): The username for authentication. password (str, optional): The password for authentication. token (str, optional): The token for authentication. endpoints (List[dict], optional): The endpoints of the service. open_endpoints (List[str], optional): The open endpoints of the service. -> [{\"post\": \"https://api.example.app/api/v1/example\"}] open_api_url (str, optional): The OpenAPI URL of the service. integration (str, optional): The integration type of the service. sample_link (str, optional): The sample link of the service. api_description (str, optional): The API description of the service. curation (dict, optional): The curation information of the service. duration (int, optional): The duration of the service. tags (List[str], optional): The tags associated with the service. Returns: Response : The response from the API call.","title":"method create_service"},{"location":"payments/#method-create_subscription","text":"create_subscription( name: str, description: str, price: int, token_address: str, amount_of_credits: Optional[int], duration: Optional[int], tags: Optional[List[str]] ) Creates a new subscription. Args: name (str): The name of the subscription. description (str): The description of the subscription. price (int): The price of the subscription. token_address (str): The token address. amount_of_credits (int, optional): The amount of credits for the subscription. duration (int, optional): The duration of the subscription. tags (List[str], optional): The tags associated with the subscription. Returns: Response : The response from the API call.","title":"method create_subscription"},{"location":"payments/#method-get_asset_ddo","text":"get_asset_ddo(did: str) Gets the asset DDO. Args: did (str): The DID of the asset. Returns: Response : The response from the API call.","title":"method get_asset_ddo"},{"location":"payments/#method-get_checkout_subscription","text":"get_checkout_subscription(subscription_did: str) Gets the checkout subscription. Args: subscription_did (str): The DID of the subscription. Returns: Response : The url of the checkout subscription.","title":"method get_checkout_subscription"},{"location":"payments/#method-get_file_details","text":"get_file_details(file_did: str) Gets the file details. Args: file_did (str): The DID of the file. Returns: Response : The url of the file details.","title":"method get_file_details"},{"location":"payments/#method-get_service_details","text":"get_service_details(service_did: str) Gets the service details. Args: service_did (str): The DID of the service. Returns: Response : The url of the service details.","title":"method get_service_details"},{"location":"payments/#method-get_service_token","text":"get_service_token(service_did: str) Gets the service token. Args: service_did (str): The DID of the service. Returns: Response : The response from the API call.","title":"method get_service_token"},{"location":"payments/#method-get_subscription_associated_files","text":"get_subscription_associated_files(subscription_did: str) Gets the subscription associated files. Args: subscription_did (str): The DID of the subscription. Returns: Response : List of DIDs of the associated files.","title":"method get_subscription_associated_files"},{"location":"payments/#method-get_subscription_associated_services","text":"get_subscription_associated_services(subscription_did: str) Gets the subscription associated services. Args: subscription_did (str): The DID of the subscription. Returns: Response : List of DIDs of the associated services.","title":"method get_subscription_associated_services"},{"location":"payments/#method-get_subscription_balance","text":"get_subscription_balance( subscription_did: str, account_address: Optional[str] = None ) Gets the subscription balance. Args: subscription_did (str): The DID of the subscription. account_address : Optional[str]: The account address. Returns: Response : The response from the API call.","title":"method get_subscription_balance"},{"location":"payments/#method-get_subscription_details","text":"get_subscription_details(subscription_did: str) Gets the subscription details. Args: subscription_did (str): The DID of the subscription. Returns: Response : The url of the subscription details.","title":"method get_subscription_details"},{"location":"payments/#method-order_subscription","text":"order_subscription(subscription_did: str, agreementId: Optional[str] = None) Orders the subscription. Args: subscription_did (str): The DID of the subscription. agreementId (str, optional): The agreement ID. Returns: Response : The response from the API call. This file was automatically generated via lazydocs .","title":"method order_subscription"},{"location":"utils/","text":"module utils function snake_to_camel snake_to_camel(name) Convert snake_case to camelCase. :param name: str :return: str This file was automatically generated via lazydocs .","title":"Utils"},{"location":"utils/#module-utils","text":"","title":"module utils"},{"location":"utils/#function-snake_to_camel","text":"snake_to_camel(name) Convert snake_case to camelCase. :param name: str :return: str This file was automatically generated via lazydocs .","title":"function snake_to_camel"}]}